name: "Get Solution or Project File from Directory"
description: "Finds the first .sln or .csproj file in a given directory and outputs its path."
inputs:
  debug-mode:
    description: "Enable debug mode for additional logging."
    required: false
    default: "false"
  directory:
    description: "The directory to search for a .sln or .csproj file."
    required: true
  find-project:
    description: "Whether to find a .csproj file."
    required: false
    default: "false"
  find-solution:
    description: "Whether to find a .sln file."
    required: false
    default: "true"
  max-depth:
    description: "Maximum depth to search for .sln or .csproj files."
    required: false
    default: "3"

outputs:
  project-found:
    description: "The path to the first .csproj file found in the directory or its subdirectories."
    value: ${{ steps.find-file.outputs.project-found }}
  solution-found:
    description: "The path to the first .sln file found in the directory or its subdirectories."
    value: ${{ steps.find-file.outputs.solution-found }}
  project-name:
    description: "The file name of the found .csproj (basename)."
    value: ${{ steps.find-file.outputs.project-name }}
  solution-name:
    description: "The file name of the found .sln (basename)."
    value: ${{ steps.find-file.outputs.solution-name }}

runs:
  using: "composite"
  steps:
    - name: Setup Node.js
      uses: Now-Micro/actions/setup-node@v1

    - name: Find .sln or .csproj file
      id: find-file
      shell: bash
      run: node "$GITHUB_ACTION_PATH/get-project-and-solution-files-from-directory.js"
      env:
        INPUT_DIRECTORY: ${{ inputs.directory }}
        INPUT_MAX_DEPTH: ${{ inputs.max-depth }}
        INPUT_FIND_SOLUTION: ${{ inputs.find-solution }}
        INPUT_FIND_PROJECT: ${{ inputs.find-project }}
        INPUT_DEBUG_MODE: ${{ inputs.debug-mode }}
