name: 'Build Solution'
description: 'Build solution with .NET and Node.js components'
inputs:
  azure-devops-password:
    description: 'Personal Access Token for Azure DevOps authentication'
    required: true
  build-configuration:
    description: 'Build configuration (Release/Debug)'
    required: false
    default: 'Release'
  dotnet-version:
    description: '.NET version to use'
    required: false
    default: '6.0.x'
  github-packages-token:
    description: 'Personal Access Token for GitHub Packages authentication'
    required: true
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '16.x'
  node-project-path:
    description: 'Path to the Node.js project.  If not specified, assumes no node project given and skips node-related steps.'
    required: false
    default: ''
  npm-cache-dependency-path:
    description: 'Path to package-lock.json for npm caching'
    required: false
    default: ''
  solution-file:
    description: 'Path to the solution file (e.g., "Legacy/CrmService/CRM-Service.sln" or "DICE-Server.sln")'
    required: true
  upload-artifact-paths:
    description: "Paths to the artifacts to be deployed. If not specified, skips uploading artifacts."
    required: false
    default: ''
  upload-artifacts-name:
    description: 'Name of the uploaded artifacts. If not specified, defaults to "build-artifacts".  Only applicable if `upload-artifact-paths` is given.'
    required: false
    default: 'build-artifacts'

outputs:
  build-artifacts-name:
    description: 'Name of the uploaded build artifacts.  Will be empty if `upload-artifact-paths` is not given.'
    value: ${{ inputs.upload-artifact-paths != '' && inputs.upload-artifacts-name || '' }}
  build-version:
    description: 'Build version number'
    value: ${{ steps.version.outputs.version }}

runs:
  using: 'composite'
  steps:
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}
        
    - name: Setup Node.js
      if: inputs.node-project-path != ''
      uses: Now-Micro/actions/setup-node@v1
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'npm'
        cache-dependency-path: ${{ inputs.npm-cache-dependency-path }}

    - name: Configure NuGet sources
      uses: Now-Micro/actions/nuget/configure-source@v1
      with:
        names: 'CodeBits, Code-Hole'
        passwords: '${{ inputs.github-packages-token }}, ${{ inputs.azure-devops-password }}'
        urls: 'https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json, https://pkgs.dev.azure.com/code-hole/_packaging/NowMicroLibraries/nuget/v3/index.json'
        usernames: '${{ github.actor }}, AzureDevOps'

    - name: Restore dependencies
      shell: bash
      run: dotnet restore ${{ inputs.solution-file }}

    - name: Build solution
      shell: bash
      run: dotnet build ${{ inputs.solution-file }} --configuration ${{ inputs.build-configuration }} --no-restore

    - name: Install npm dependencies
      if: inputs.node-project-path != ''
      shell: bash
      working-directory: ${{ inputs.node-project-path }}
      run: npm ci
      
    - name: Build frontend
      if: inputs.node-project-path != ''
      shell: bash
      working-directory: ${{ inputs.node-project-path }}
      run: npm run build
      
    - name: Publish solution
      shell: bash
      run: dotnet publish ${{ inputs.solution-file }} --configuration ${{ inputs.build-configuration }} --no-restore

    - name: Set build version
      id: version
      shell: bash
      run: echo "version=${{ github.run_number }}" >> $GITHUB_OUTPUT
    
    - name: Upload build artifacts
      if: inputs.upload-artifact-paths != ''
      uses: actions/upload-artifact@v4
      id: upload-artifacts
      with:
        name: ${{ inputs.upload-artifact-paths != '' && inputs.upload-artifacts-name || '' }}
        path: ${{ inputs.upload-artifact-paths }}
        retention-days: 1
